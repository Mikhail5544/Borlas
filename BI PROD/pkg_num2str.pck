CREATE OR REPLACE PACKAGE pkg_num2str AS
  ----========================================================================----
  -- —умма прописью. 
  -- ¬ходные значени€: par_num: 123456789012.12 - не более 15 знаков в длину, 
  -- вместе с разделителем и дробной частью. ƒробна€ часть может 
  -- отсутствовать.
  -- par_fund_brief - валюта: RUR, USD или EUR
  FUNCTION Num_To_Str
  (
    par_num        NUMBER
   ,par_fund_brief VARCHAR2
  ) RETURN VARCHAR2;
  ----========================================================================----
END PKG_NUM2STR;
/
CREATE OR REPLACE PACKAGE BODY pkg_num2str AS
  ----========================================================================----
  -- —умма прописью. 
  -- ¬ходные значени€: par_num: 123456789012.12 - не более 15 знаков в длину, 
  -- вместе с разделителем и дробной частью. ƒробна€ часть может 
  -- отсутствовать.
  -- par_fund_brief - валюта: RUR, USD или EUR
  FUNCTION Num_To_Str
  (
    par_num        NUMBER
   ,par_fund_brief VARCHAR2
  ) RETURN VARCHAR2 IS
    v_stmon VARCHAR2(255) := ''; -- результат (монтирование строки)
    v_st    VARCHAR2(15); -- вспомогательна€ переменна€
    v_char3 VARCHAR2(3); -- три знака
    v_tr1   VARCHAR2(1); -- сотни
    v_tr2   VARCHAR2(1); -- дес€тки
    v_tr3   VARCHAR2(1); -- единицы
    v_kop1  VARCHAR2(1); -- дес€тки копеек
    v_kop2  VARCHAR2(1); -- единицы копеек
  BEGIN
    -- {конвертаци€ из флоат в строку}
    v_st := SUBSTR((TO_CHAR(ABS(par_num), '999999999990D00')), 2, 15);
    FOR i IN 1 .. 5
    LOOP
      -- выдел€ем три цифры
      v_char3 := SUBSTR(v_st, 1, 3);
      v_st    := SUBSTR(v_st, 4, (LENGTH(v_st) - 3));
      -- перва€ цифра из трЄх
      v_tr1 := SUBSTR(v_char3, 1, 1);
      -- втора€ цифра из трЄх
      v_tr2 := SUBSTR(v_char3, 2, 1);
      -- треть€ цифра из трЄх
      v_tr3 := SUBSTR(v_char3, 3, 1);
      -- ќбработка целой части числа
      IF i <> 5
      THEN
        -- обработка первой цифры
        IF v_tr1 = '1'
        THEN
          v_stmon := v_stmon || 'сто ';
        ELSIF v_tr1 = '2'
        THEN
          v_stmon := v_stmon || 'двести ';
        ELSIF v_tr1 = '3'
        THEN
          v_stmon := v_stmon || 'триста ';
        ELSIF v_tr1 = '4'
        THEN
          v_stmon := v_stmon || 'четыреста ';
        ELSIF v_tr1 = '5'
        THEN
          v_stmon := v_stmon || 'п€тьсот ';
        ELSIF v_tr1 = '6'
        THEN
          v_stmon := v_stmon || 'шестьсот ';
        ELSIF v_tr1 = '7'
        THEN
          v_stmon := v_stmon || 'семьсот ';
        ELSIF v_tr1 = '8'
        THEN
          v_stmon := v_stmon || 'восемьсот ';
        ELSIF v_tr1 = '9'
        THEN
          v_stmon := v_stmon || 'дев€тьсот ';
        END IF;
        -- обработка 2 цифры
        IF v_tr2 = '1'
        THEN
          IF v_tr3 = '0'
          THEN
            v_stmon := v_stmon || 'дес€ть ';
          ELSIF v_tr3 = '1'
          THEN
            v_stmon := v_stmon || 'одиннадцать ';
          ELSIF v_tr3 = '2'
          THEN
            v_stmon := v_stmon || 'двенадцать ';
          ELSIF v_tr3 = '3'
          THEN
            v_stmon := v_stmon || 'тpинадцать ';
          ELSIF v_tr3 = '4'
          THEN
            v_stmon := v_stmon || 'четыpнадцать ';
          ELSIF v_tr3 = '5'
          THEN
            v_stmon := v_stmon || 'п€тнадцать ';
          ELSIF v_tr3 = '6'
          THEN
            v_stmon := v_stmon || 'шестнадцать ';
          ELSIF v_tr3 = '7'
          THEN
            v_stmon := v_stmon || 'семнадцать ';
          ELSIF v_tr3 = '8'
          THEN
            v_stmon := v_stmon || 'восемнадцать ';
          ELSIF v_tr3 = '9'
          THEN
            v_stmon := v_stmon || 'дев€тнадцать ';
          END IF;
        ELSIF v_tr2 = '2'
        THEN
          v_stmon := v_stmon || 'двадцать ';
        ELSIF v_tr2 = '3'
        THEN
          v_stmon := v_stmon || 'тpидцать ';
        ELSIF v_tr2 = '4'
        THEN
          v_stmon := v_stmon || 'соpок ';
        ELSIF v_tr2 = '5'
        THEN
          v_stmon := v_stmon || 'п€тьдес€т ';
        ELSIF v_tr2 = '6'
        THEN
          v_stmon := v_stmon || 'шестьдес€т ';
        ELSIF v_tr2 = '7'
        THEN
          v_stmon := v_stmon || 'семьдес€т ';
        ELSIF v_tr2 = '8'
        THEN
          v_stmon := v_stmon || 'восемьдес€т ';
        ELSIF v_tr2 = '9'
        THEN
          v_stmon := v_stmon || 'дев€носто ';
        END IF;
        -- обработка 3 цифры
        IF v_tr2 != '1'
        THEN
          IF v_tr3 = '1'
             AND i != 3
          THEN
            v_stmon := v_stmon || 'один ';
          ELSIF v_tr3 = '1'
                AND i = 3
          THEN
            v_stmon := v_stmon || 'одна ';
          ELSIF v_tr3 = '2'
                AND i != 3
          THEN
            v_stmon := v_stmon || 'два ';
          ELSIF v_tr3 = '2'
                AND i = 3
          THEN
            v_stmon := v_stmon || 'две ';
          ELSIF v_tr3 = '3'
          THEN
            v_stmon := v_stmon || 'тpи ';
          ELSIF v_tr3 = '4'
          THEN
            v_stmon := v_stmon || 'четыpе ';
          ELSIF v_tr3 = '5'
          THEN
            v_stmon := v_stmon || 'п€ть ';
          ELSIF v_tr3 = '6'
          THEN
            v_stmon := v_stmon || 'шесть ';
          ELSIF v_tr3 = '7'
          THEN
            v_stmon := v_stmon || 'семь ';
          ELSIF v_tr3 = '8'
          THEN
            v_stmon := v_stmon || 'восемь ';
          ELSIF v_tr3 = '9'
          THEN
            v_stmon := v_stmon || 'дев€ть ';
          END IF;
        END IF;
        -- ќбработка миллиардов
        IF i = 1
        THEN
          IF (v_tr1 = ' ')
             AND (v_tr2 = ' ')
             AND (v_tr3 = ' ')
          THEN
            NULL;
          ELSIF (v_tr1 = '0')
                AND (v_tr2 = '0')
                AND (v_tr3 = '0')
          THEN
            NULL;
          ELSIF (v_tr3 = '1')
                AND (v_tr2 != '1')
          THEN
            v_stmon := v_stmon || 'миллиаpд ';
          ELSIF (v_tr3 = '2' OR v_tr3 = '3' OR v_tr3 = '4')
                AND (v_tr2 != '1')
          THEN
            v_stmon := v_stmon || 'миллиаpда ';
          ELSE
            v_stmon := v_stmon || 'миллиаpдов ';
          END IF;
        END IF;
        -- ќбработка миллионов
        IF i = 2
        THEN
          IF (v_tr1 = ' ')
             AND (v_tr2 = ' ')
             AND (v_tr3 = ' ')
          THEN
            NULL;
          ELSIF (v_tr1 = '0')
                AND (v_tr2 = '0')
                AND (v_tr3 = '0')
          THEN
            NULL;
          ELSIF (v_tr3 = '1')
                AND (v_tr2 != '1')
          THEN
            v_stmon := v_stmon || 'миллион ';
          ELSIF (v_tr3 = '2' OR v_tr3 = '3' OR v_tr3 = '4')
                AND (v_tr2 != '1')
          THEN
            v_stmon := v_stmon || 'миллиона ';
          ELSE
            v_stmon := v_stmon || 'миллионов ';
          END IF;
        END IF;
        -- ќбработка тыс€ч
        IF i = 3
        THEN
          IF (v_tr1 = ' ')
             AND (v_tr2 = ' ')
             AND (v_tr3 = ' ')
          THEN
            NULL;
          ELSIF (v_tr1 = '0')
                AND (v_tr2 = '0')
                AND (v_tr3 = '0')
          THEN
            NULL;
          ELSIF (v_tr3 = '1')
                AND (v_tr2 <> '1')
          THEN
            v_stmon := v_stmon || 'тыс€ча ';
          ELSIF (v_tr3 = '2' OR v_tr3 = '3' OR v_tr3 = '4')
                AND (v_tr2 <> '1')
          THEN
            v_stmon := v_stmon || 'тыс€чи ';
          ELSE
            v_stmon := v_stmon || 'тыс€ч ';
          END IF;
        END IF;
        -- ќбработка сотен
        IF i = 4
        THEN
          IF (v_tr1 = ' ')
             AND (v_tr2 = ' ')
             AND (v_tr3 = ' ')
          THEN
            NULL;
          ELSIF (v_tr3 = '1')
                AND (v_tr2 != '1')
          THEN
            IF par_fund_brief = 'RUR'
            THEN
              v_stmon := v_stmon || 'pубль ';
            ELSIF par_fund_brief = 'USD'
            THEN
              v_stmon := v_stmon || 'доллар ';
            ELSIF par_fund_brief = 'EUR'
            THEN
              v_stmon := v_stmon || 'евро ';
            END IF;
          ELSIF (v_tr3 = '2' OR v_tr3 = '3' OR v_tr3 = '4')
                AND (v_tr2 != '1')
          THEN
            IF par_fund_brief = 'RUR'
            THEN
              v_stmon := v_stmon || 'pубл€ ';
            ELSIF par_fund_brief = 'USD'
            THEN
              v_stmon := v_stmon || 'доллара ';
            ELSIF par_fund_brief = 'EUR'
            THEN
              v_stmon := v_stmon || 'евро ';
            END IF;
          ELSIF (v_tr1 = ' ')
                AND (v_tr2 = ' ')
                AND (v_tr3 = '0')
          THEN
            IF par_fund_brief = 'RUR'
            THEN
              v_stmon := v_stmon || 'ноль pублей ';
            ELSIF par_fund_brief = 'USD'
            THEN
              v_stmon := v_stmon || 'ноль долларов ';
            ELSIF par_fund_brief = 'EUR'
            THEN
              v_stmon := v_stmon || 'ноль евро ';
            END IF;
          ELSE
            IF par_fund_brief = 'RUR'
            THEN
              v_stmon := v_stmon || 'pублей ';
            ELSIF par_fund_brief = 'USD'
            THEN
              v_stmon := v_stmon || 'долларов ';
            ELSIF par_fund_brief = 'EUR'
            THEN
              v_stmon := v_stmon || 'евро ';
            END IF;
          END IF;
        END IF;
      ELSIF i = 5
      THEN
        -- выделение дес€тков копеек
        v_kop1 := SUBSTR(v_char3, 2, 1);
        -- выделение единиц копеек
        v_kop2 := SUBSTR(v_char3, 3, 1);
        -- {добавление копеек к результирующей строке}
        v_stmon := v_stmon || v_kop1 || v_kop2 || ' ';
        IF (v_kop2 = '1')
           AND (v_kop1 != '1')
        THEN
          IF par_fund_brief = 'RUR'
          THEN
            v_stmon := v_stmon || 'копейка';
          ELSIF par_fund_brief = 'USD'
          THEN
            v_stmon := v_stmon || 'цент';
          ELSIF par_fund_brief = 'EUR'
          THEN
            v_stmon := v_stmon || 'евроцент';
          END IF;
        ELSIF (v_kop2 = '2' OR v_kop2 = '3' OR v_kop2 = '4')
              AND (v_kop1 != '1')
        THEN
          IF par_fund_brief = 'RUR'
          THEN
            v_stmon := v_stmon || 'копейки';
          ELSIF par_fund_brief = 'USD'
          THEN
            v_stmon := v_stmon || 'цента';
          ELSIF par_fund_brief = 'EUR'
          THEN
            v_stmon := v_stmon || 'евроцента';
          END IF;
        ELSE
          IF par_fund_brief = 'RUR'
          THEN
            v_stmon := v_stmon || 'копеек';
          ELSIF par_fund_brief = 'USD'
          THEN
            v_stmon := v_stmon || 'центов';
          ELSIF par_fund_brief = 'EUR'
          THEN
            v_stmon := v_stmon || 'евроцентов';
          END IF;
        END IF;
      END IF;
    END LOOP;
    -- преобразование первого симовла строки в прописную букву
    v_stmon := UPPER(SUBSTR(v_stmon, 1, 1)) || SUBSTR(v_stmon, 2, (LENGTH(v_stmon) - 1));
    RETURN(v_stmon);
  END Num_To_Str;
  ----========================================================================----
  /*
  FUNCTION get_sum_str_2 (source IN NUMBER)
  RETURN varchar2 is result VARCHAR2(300);
  BEGIN
  -- k - копейки
    if source < 1
       then
          result := 'ноль '||
             ltrim(
                   to_char(
                           source,'9,9,,9,,,,,,9,9,,9,,,,,9,9,,9,,,,9,9,,9,,,.99'
                          )
                  ) || 'k';
       else
          result := ltrim(
                          to_char
                          (
                           source,'9,9,,9,,,,,,9,9,,9,,,,,9,9,,9,,,,9,9,,9,,,.99'
                          )
                         ) || 'k';
    end if;
  
  -- t - тыс€чи; m - милионы; M - миллиарды;
    result := replace( result, ',,,,,,', 'eM');
    result := replace( result, ',,,,,', 'em');
    result := replace( result, ',,,,', 'et');
  -- e - единицы; d - дес€тки; c - сотни;
    result := replace( result, ',,,', 'e');
    result := replace( result, ',,', 'd');
    result := replace( result, ',', 'c');
  -- ”даление незначащих нулей
    result := replace( result, '0c0d0et', '');
    result := replace( result, '0c0d0em', '');
    result := replace( result, '0c0d0eM', '');
  
  -- ќбработка сотен
    result := replace( result, '0c', '');
    result := replace( result, '1c', 'сто ');
    result := replace( result, '2c', 'двести ');
    result := replace( result, '3c', 'триста ');
    result := replace( result, '4c', 'четыреста ');
    result := replace( result, '5c', 'п€тьсот ');
    result := replace( result, '6c', 'шестьсот ');
    result := replace( result, '7c', 'семьсот ');
    result := replace( result, '8c', 'восемьсот ');
    result := replace( result, '9c', 'дев€тьсот ');
  
  -- ќбработка дес€тков
    result := replace( result, '1d0e', 'дес€ть ');
    result := replace( result, '1d1e', 'одиннадцать ');
    result := replace( result, '1d2e', 'двенадцать ');
    result := replace( result, '1d3e', 'тринадцать ');
    result := replace( result, '1d4e', 'четырнадцать ');
    result := replace( result, '1d5e', 'п€тнадцать ');
    result := replace( result, '1d6e', 'шестнадцать ');
    result := replace( result, '1d7e', 'семьнадцать ');
    result := replace( result, '1d8e', 'восемнадцать ');
    result := replace( result, '1d9e', 'дев€тнадцать ');
    result := replace( result, '0d', '');
    result := replace( result, '2d', 'двадцать ');
    result := replace( result, '3d', 'тридцать ');
    result := replace( result, '4d', 'сорок ');
    result := replace( result, '5d', 'п€тьдес€т ');
    result := replace( result, '6d', 'шестьдес€т ');
    result := replace( result, '7d', 'семьдес€т ');
    result := replace( result, '8d', 'восемьдес€т ');
    result := replace( result, '9d', 'дев€носто ');
  
  -- ќбработка единиц
    result := replace( result, '0e', '');
    result := replace( result, '5e', 'п€ть ');
    result := replace( result, '6e', 'шесть ');
    result := replace( result, '7e', 'семь ');
    result := replace( result, '8e', 'восемь ');
    result := replace( result, '9e', 'дев€ть ');
  --
    result := replace( result, '1e.', 'один рубль ');
    result := replace( result, '2e.', 'два рубл€ ');
    result := replace( result, '3e.', 'три рубл€ ');
    result := replace( result, '4e.', 'четыре рубл€ ');
    result := replace( result, '1et', 'одна тыс€ча ');
    result := replace( result, '2et', 'две тыс€чи ');
    result := replace( result, '3et', 'три тыс€чи ');
    result := replace( result, '4et', 'четыре тыс€чи ');
    result := replace( result, '1em', 'один миллион ');
    result := replace( result, '2em', 'два миллиона ');
    result := replace( result, '3em', 'три миллиона ');
    result := replace( result, '4em', 'четыре миллиона ');
    result := replace( result, '1eM', 'один милиард ');
    result := replace( result, '2eM', 'два милиарда ');
    result := replace( result, '3eM', 'три милиарда ');
    result := replace( result, '4eM', 'четыре милиарда ');
  
  -- ќбработка копеек
    result := replace( result, '11k', '11 копеек');
    result := replace( result, '12k', '12 копеек');
    result := replace( result, '13k', '13 копеек');
    result := replace( result, '14k', '14 копеек');
    result := replace( result, '1k', '1 копейка');
    result := replace( result, '2k', '2 копейки');
    result := replace( result, '3k', '3 копейки');
    result := replace( result, '4k', '4 копейки');
  
  -- ќбработка названий групп
    result := replace( result, '.', 'рублей ');
    result := replace( result, 't', 'тыс€ч ');
    result := replace( result, 'm', 'миллионов ');
    result := replace( result, 'M', 'милиардов ');
    result := replace( result, 'k', ' копеек');
  --
    RETURN(result);
  END get_sum_str_2; 
  */
  ----========================================================================----

  /* —ќ«ƒјЌ»≈ ‘”Ќ ÷»» ѕ≈–≈¬ќƒј ƒј“џ ¬ —“–ќ ” ¬ –ќƒ»“≈Ћ№Ќќћ ѕјƒ≈∆≈ */
  FUNCTION daterusr(d DATE) RETURN VARCHAR2 IS
    /* entry - date
    exit - date in russian text roditelnij padej */
    ds    VARCHAR2(100);
    DAY   CHAR(2);
    MONTH CHAR(2);
    YEAR  CHAR(4);
  BEGIN
    IF d < TO_DATE('01-01-1990', 'DD-MM-YYYY')
    THEN
      RETURN '–азрешен диапазон дат: 01.01.1990 - 31.12.2020. «адано: ' || TO_CHAR(d, 'YYYY');
    ELSIF d > TO_DATE('31-12-2020', 'DD-MM-YYYY')
    THEN
      RETURN '–азрешен диапазон дат: 01.01.1990 - 31.12.2020. «адано: ' || TO_CHAR(d, 'YYYY');
    ELSE
      DAY   := TO_CHAR(d, 'DD');
      MONTH := TO_CHAR(d, 'MM');
      YEAR  := TO_CHAR(d, 'YYYY');
    
      IF DAY = '01'
      THEN
        ds := 'ѕервого ';
      ELSIF DAY = '02'
      THEN
        ds := '¬торого ';
      ELSIF DAY = '03'
      THEN
        ds := '“ретьего ';
      ELSIF DAY = '04'
      THEN
        ds := '„етвертого ';
      ELSIF DAY = '05'
      THEN
        ds := 'ѕ€того ';
      ELSIF DAY = '06'
      THEN
        ds := 'Ўестого ';
      ELSIF DAY = '07'
      THEN
        ds := '—едьмого ';
      ELSIF DAY = '08'
      THEN
        ds := '¬осьмого ';
      ELSIF DAY = '09'
      THEN
        ds := 'ƒев€того ';
      ELSIF DAY = '10'
      THEN
        ds := 'ƒес€того ';
      ELSIF DAY = '11'
      THEN
        ds := 'ќдиннадцатого ';
      ELSIF DAY = '12'
      THEN
        ds := 'ƒвенадцатого ';
      ELSIF DAY = '13'
      THEN
        ds := '“ринадцатого ';
      ELSIF DAY = '14'
      THEN
        ds := '„етырнадцатого ';
      ELSIF DAY = '15'
      THEN
        ds := 'ѕ€тнадцатого ';
      ELSIF DAY = '16'
      THEN
        ds := 'Ўестнадцатого ';
      ELSIF DAY = '17'
      THEN
        ds := '—емнадцатого ';
      ELSIF DAY = '18'
      THEN
        ds := '¬осемнадцатого ';
      ELSIF DAY = '19'
      THEN
        ds := 'ƒев€тнадцатого ';
      ELSIF DAY = '20'
      THEN
        ds := 'ƒвадцатого ';
      ELSIF DAY = '21'
      THEN
        ds := 'ƒвадцать первого ';
      ELSIF DAY = '22'
      THEN
        ds := 'ƒвадцать второго ';
      ELSIF DAY = '23'
      THEN
        ds := 'ƒвадцать третьго ';
      ELSIF DAY = '24'
      THEN
        ds := 'ƒвадцать четвертого ';
      ELSIF DAY = '25'
      THEN
        ds := 'ƒвадцать п€того ';
      ELSIF DAY = '26'
      THEN
        ds := 'ƒвадцать шестого ';
      ELSIF DAY = '27'
      THEN
        ds := 'ƒвадцать седьмого ';
      ELSIF DAY = '28'
      THEN
        ds := 'ƒвадцать восьмого ';
      ELSIF DAY = '29'
      THEN
        ds := 'ƒвадцать дев€того ';
      ELSIF DAY = '30'
      THEN
        ds := '“ридцатого ';
      ELSIF DAY = '31'
      THEN
        ds := '“ридцать первого ';
      END IF;
    
      IF MONTH = '01'
      THEN
        ds := ds || '€нвар€ ';
      ELSIF MONTH = '02'
      THEN
        ds := ds || 'феврал€ ';
      ELSIF MONTH = '03'
      THEN
        ds := ds || 'марта ';
      ELSIF MONTH = '04'
      THEN
        ds := ds || 'апрел€ ';
      ELSIF MONTH = '05'
      THEN
        ds := ds || 'ма€ ';
      ELSIF MONTH = '06'
      THEN
        ds := ds || 'июн€ ';
      ELSIF MONTH = '07'
      THEN
        ds := ds || 'июл€ ';
      ELSIF MONTH = '08'
      THEN
        ds := ds || 'августа ';
      ELSIF MONTH = '09'
      THEN
        ds := ds || 'сент€бр€ ';
      ELSIF MONTH = '10'
      THEN
        ds := ds || 'окт€бр€ ';
      ELSIF MONTH = '11'
      THEN
        ds := ds || 'но€бр€ ';
      ELSIF MONTH = '12'
      THEN
        ds := ds || 'декабр€ ';
      END IF;
    
      IF YEAR = '1990'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€ностого';
      ELSIF YEAR = '1991'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто первого';
      ELSIF YEAR = '1992'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто второго';
      ELSIF YEAR = '1993'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто третьего';
      ELSIF YEAR = '1994'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто четвертого';
      ELSIF YEAR = '1995'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто п€того';
      ELSIF YEAR = '1996'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто шестого';
      ELSIF YEAR = '1997'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто седьмого';
      ELSIF YEAR = '1998'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто восьмого';
      ELSIF YEAR = '1999'
      THEN
        ds := ds || 'одна тыс€ча дев€тьсот дев€носто дев€того';
      ELSIF YEAR = '2000'
      THEN
        ds := ds || 'двухтыс€чного';
      ELSIF YEAR = '2001'
      THEN
        ds := ds || 'две тыс€чи первого';
      ELSIF YEAR = '2002'
      THEN
        ds := ds || 'две тыс€чи второго';
      ELSIF YEAR = '2003'
      THEN
        ds := ds || 'две тыс€чи третьего';
      ELSIF YEAR = '2004'
      THEN
        ds := ds || 'две тыс€чи четвертого';
      ELSIF YEAR = '2005'
      THEN
        ds := ds || 'две тыс€чи п€того';
      ELSIF YEAR = '2006'
      THEN
        ds := ds || 'две тыс€чи шестого';
      ELSIF YEAR = '2007'
      THEN
        ds := ds || 'две тыс€чи седьмого';
      ELSIF YEAR = '2008'
      THEN
        ds := ds || 'две тыс€чи восьмого';
      ELSIF YEAR = '2009'
      THEN
        ds := ds || 'две тыс€чи дев€того';
      ELSIF YEAR = '2010'
      THEN
        ds := ds || 'две тыс€чи дес€того';
      ELSIF YEAR = '2011'
      THEN
        ds := ds || 'две тыс€чи одиннадцатого';
      ELSIF YEAR = '2012'
      THEN
        ds := ds || 'две тыс€чи двенадцатого';
      ELSIF YEAR = '2013'
      THEN
        ds := ds || 'две тыс€чи тринадцатого';
      ELSIF YEAR = '2014'
      THEN
        ds := ds || 'две тыс€чи четырнадцатого';
      ELSIF YEAR = '2015'
      THEN
        ds := ds || 'две тыс€чи п€тнадцатого';
      ELSIF YEAR = '2016'
      THEN
        ds := ds || 'две тыс€чи шестнадцатого';
      ELSIF YEAR = '2017'
      THEN
        ds := ds || 'две тыс€чи семнадцатого';
      ELSIF YEAR = '2018'
      THEN
        ds := ds || 'две тыс€чи восемнадцатого';
      ELSIF YEAR = '2019'
      THEN
        ds := ds || 'две тыс€чи дев€тнадцатого';
      ELSIF YEAR = '2020'
      THEN
        ds := ds || 'две тыс€чи двадцатого';
      END IF;
      ds := ds || ' года';
      RETURN ds;
    END IF;
  END daterusr;
  ----========================================================================----
END PKG_NUM2STR;
/
